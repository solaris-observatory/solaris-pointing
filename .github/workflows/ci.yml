name: CI

on:
  push:
    branches: ["**"]
  pull_request:

concurrency:
  group: ci-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  tox:
    name: Python ${{ matrix.python-version }} â€¢ tox
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure Poetry (in-project venv)
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Cache virtualenv (.venv)
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-${{ matrix.python-version }}-

      - name: Install deps with Poetry
        run: poetry install --no-interaction --no-ansi

      - name: Run tox (uses your envlist)
        run: poetry run tox -v

      - name: Upload coverage.xml (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml
          if-no-files-found: ignore

      - name: Ensure coverage.xml exists (for Coveralls)
        run: |
          if [ ! -f coverage.xml ]; then
            poetry run pytest -q --cov=solaris_pointing --cov-report=xml:coverage.xml
          fi

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: coverage.xml
          format: cobertura
          parallel: true

  coveralls_finish:
    name: Coveralls Finish
    needs: tox
    runs-on: ubuntu-latest
    steps:
      - name: Finalize Coveralls
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true
