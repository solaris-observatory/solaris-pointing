# How it works:
# - `tox` (without arguments) runs lint + format-check + tests (py313).
# - `tox -e lint` runs only the linter.
# - `tox -e format-check` just format check (CI-safe; no changes)
# - `tox -e format` applies formatting locally (modifies files).
# - `tox -e py310,py311` runs tests on other Python versions if available.

[tox]
requires = tox>=4.11
envlist = lint, format-check, py313
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = Run tests with coverage (HTML local, term+XML always)
package = wheel
wheel_build_env = .pkg
setenv =
    COVERAGE_PROCESS_START = {toxinidir}/.coveragerc
    # Fallback sicuro per layout src (non interferisce con il wheel corretto):
    PYTHONPATH = {toxinidir}/src
deps =
    pytest>=7
    pytest-cov>=4
    hypothesis
commands =
    pytest -q \
      --cov=solaris_pointing \
      --cov-report=term-missing \
      --cov-report=xml:coverage.xml \
      --cov-report=html:htmlcov \
      --cov-fail-under=95 \

      {posargs}
passenv = PYTHON*, CI

[testenv:lint]
description = Ruff check (lint only)
skip_install = true
deps = ruff>=0.4
commands =
    ruff check --select E --line-length 88 .

[testenv:format-check]
description = Ruff format check (CI-safe; no changes)
skip_install = true
deps = ruff>=0.4
commands =
    ruff format --check --line-length 88 .

[testenv:format]
description = Ruff format (LOCAL ONLY; modifies files)
skip_install = true
deps = ruff>=0.4
commands =
    ruff format --line-length 88 .
